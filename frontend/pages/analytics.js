import { useState, useEffect } from 'react';
import Head from 'next/head';
import { Bar, Line, Pie } from 'react-chartjs-2';

export default function Analytics({ user }) {
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(true);
  const [timeRange, setTimeRange] = useState('7d');

  useEffect(() => {
    // In a real implementation, we would fetch data from the backend API
    // For now, we'll use mock data
    const mockReports = [
      { 
        id: 1, 
        report_title: 'Weekly Threat Analysis Report', 
        report_type: 'Threat Analysis', 
        generated_at: '2023-01-15T09:15:00Z',
        access_level: 3,
        generated_by: 'AI System'
      },
      { 
        id: 2, 
        report_title: 'Incident Response Effectiveness', 
        report_type: 'After Action', 
        generated_at: '2023-01-14T14:30:00Z',
        access_level: 2,
        generated_by: 'John Smith'
      },
      { 
        id: 3, 
        report_title: 'Monthly Security Trends', 
        report_type: 'Trend Analysis', 
        generated_at: '2023-01-13T08:20:00Z',
        access_level: 4,
        generated_by: 'Jane Doe'
      },
    ];

    setReports(mockReports);
    setLoading(false);
  }, []);

  // Mock chart data
  const threatData = {
    labels: ['Cyber', 'Physical', 'Natural Disaster', 'Civil Unrest', 'Intelligence'],
    datasets: [
      {
        label: 'Threat Count',
        data: [12, 8, 3, 5, 7],
        backgroundColor: [
          'rgba(255, 99, 132, 0.6)',
          'rgba(54, 162, 235, 0.6)',
          'rgba(255, 206, 86, 0.6)',
          'rgba(75, 192, 192, 0.6)',
          'rgba(153, 102, 255, 0.6)',
        ],
      },
    ],
  };

  const incidentData = {
    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
    datasets: [
      {
        label: 'Incidents Resolved',
        data: [12, 19, 3, 5, 2, 3],
        borderColor: 'rgb(75, 192, 192)',
        backgroundColor: 'rgba(75, 192, 192, 0.2)',
      },
      {
        label: 'Incidents Reported',
        data: [8, 12, 6, 9, 7, 11],
        borderColor: 'rgb(255, 99, 132)',
        backgroundColor: 'rgba(255, 99, 132, 0.2)',
      },
    ],
  };

  const severityData = {
    labels: ['Low', 'Medium', 'High', 'Critical'],
    datasets: [
      {
        data: [12, 19, 3, 5],
        backgroundColor: [
          'rgba(75, 192, 192, 0.6)',
          'rgba(255, 206, 86, 0.6)',
          'rgba(255, 99, 132, 0.6)',
          'rgba(153, 102, 255, 0.6)',
        ],
      },
    ],
  };

  if (!user) {
    return (
      <div className="container">
        <Head>
          <title>CivicShield - Analytics</title>
          <meta name="description" content="View analytics and reports" />
        </Head>
        <main>
          <h1>Analytics & Reports</h1>
          <p>Please log in to view analytics.</p>
        </main>
      </div>
    );
  }

  return (
    <div className="container">
      <Head>
        <title>CivicShield - Analytics</title>
        <meta name="description" content="View analytics and reports" />
      </Head>

      <main>
        <div className="header">
          <h1>Analytics & Reports</h1>
          <div className="time-filter">
            <label htmlFor="time-range">Time Range: </label>
            <select 
              id="time-range" 
              value={timeRange} 
              onChange={(e) => setTimeRange(e.target.value)}
            >
              <option value="7d">Last 7 Days</option>
              <option value="30d">Last 30 Days</option>
              <option value="90d">Last 90 Days</option>
              <option value="1y">Last Year</option>
            </select>
          </div>
        </div>

        <div className="dashboard-grid">
          <div className="card">
            <h2>Threat Distribution</h2>
            <Pie data={threatData} />
          </div>

          <div className="card">
            <h2>Incident Trends</h2>
            <Line data={incidentData} />
          </div>

          <div className="card">
            <h2>Severity Breakdown</h2>
            <Bar data={severityData} />
          </div>
        </div>

        <div className="reports-section">
          <h2>Recent Reports</h2>
          {loading ? (
            <p>Loading reports...</p>
          ) : reports.length === 0 ? (
            <p>No reports found.</p>
          ) : (
            <table>
              <thead>
                <tr>
                  <th>Title</th>
                  <th>Type</th>
                  <th>Generated By</th>
                  <th>Date</th>
                  <th>Access Level</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                {reports.map(report => (
                  <tr key={report.id}>
                    <td>{report.report_title}</td>
                    <td>{report.report_type}</td>
                    <td>{report.generated_by}</td>
                    <td>{new Date(report.generated_at).toLocaleDateString()}</td>
                    <td>{report.access_level}</td>
                    <td>
                      <button className="action-btn">View</button>
                      <button className="action-btn">Download</button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          )}
        </div>
      </main>

      <style jsx>{`
        .container {
          min-height: 100vh;
          padding: 0 2rem;
        }

        main {
          padding: 2rem 0;
        }

        .header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 2rem;
        }

        h1 {
          color: #333;
        }

        h2 {
          color: #555;
          margin-bottom: 1rem;
        }

        .time-filter {
          display: flex;
          align-items: center;
          gap: 0.5rem;
        }

        .dashboard-grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
          gap: 2rem;
          margin-bottom: 2rem;
        }

        .card {
          background: white;
          border-radius: 8px;
          padding: 1.5rem;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .reports-section {
          background: white;
          border-radius: 8px;
          padding: 1.5rem;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          margin-top: 2rem;
        }

        table {
          width: 100%;
          border-collapse: collapse;
        }

        th, td {
          padding: 1rem;
          text-align: left;
          border-bottom: 1px solid #eee;
        }

        th {
          background: #f8f9fa;
          font-weight: 600;
        }

        .action-btn {
          background: #f5f5f5;
          color: #333;
          border: none;
          padding: 0.25rem 0.5rem;
          border-radius: 4px;
          cursor: pointer;
          margin-right: 0.5rem;
          font-size: 0.875rem;
        }

        .action-btn:hover {
          background: #e0e0e0;
        }

        select {
          padding: 0.5rem;
          border: 1px solid #ddd;
          border-radius: 4px;
          font-size: 1rem;
        }
      `}</style>
    </div>
  );
}